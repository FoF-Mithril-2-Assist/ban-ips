{"version":3,"sources":["webpack://@fof/ban-ips/webpack/bootstrap","webpack://@fof/ban-ips/external \"flarum.core.compat['Model']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['components/Button']\"","webpack://@fof/ban-ips/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/ban-ips/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['helpers/punctuateSeries']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['helpers/username']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['extend']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/ban-ips/./src/common/components/BanIPModal.js","webpack://@fof/ban-ips/./src/common/components/UnbanIPModal.js","webpack://@fof/ban-ips/./src/common/models/BannedIP.js","webpack://@fof/ban-ips/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['utils/PostControls']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['utils/UserControls']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['models/User']\"","webpack://@fof/ban-ips/external \"flarum.core.compat['components/Badge']\"","webpack://@fof/ban-ips/./src/forum/index.js","webpack://@fof/ban-ips/./src/forum/addBanIPControl.js","webpack://@fof/ban-ips/./src/forum/addBannedBadge.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","BanIPModal","init","this","address","props","post","user","bannedIP","app","store","getBy","banOptions","push","banOption","prop","reason","otherUsers","loading","className","title","translator","trans","content","_this","otherUsersBanned","usernames","map","u","displayName","type","id","checked","onclick","htmlFor","ip","ipAddress","bidi","length","Alert","component","children","transChoice","users","punctuateSeries","dismissible","flarum_components_Button__WEBPACK_IMPORTED_MODULE_2___default","a","onsubmit","e","_this2","preventDefault","getOtherUsers","attrs","userId","createRecord","save","then","done","hide","onerror","loaded","request","data","attributes","url","forum","attribute","apiEndpoint","method","errorHandler","res","pushPayload","forEach","_this3","pushObject","filter","bannedIPs","obj","relationships","banned_ip","banned_ips","isBanned","Modal","UnbanIPModal","ips","flarum_components_Button__WEBPACK_IMPORTED_MODULE_1___default","lazyRedraw","models","Array","isArray","b","_BanIPModal","location","reload","BannedIP","exists","mixin","Model","creator","hasOne","createdAt","transformDate","deletedAt","initializers","add","posts","canBanIP","hasMany","extend","PostControls","items","prefix","isHidden","session","contentType","Button","icon","modal","show","UserControls","User","Badge","label"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['helpers/punctuateSeries'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/Modal'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport Alert from 'flarum/components/Alert';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\n\nexport default class BanIPModal extends Modal {\n    init() {\n        this.address = this.props.address;\n        this.post = this.props.post;\n        this.user = this.props.user || (this.post && this.post.user());\n\n        if (!this.user && this.address) {\n            const bannedIP = app.store.getBy('banned_ips', 'address', this.address);\n\n            if (bannedIP) this.user = bannedIP.user();\n        }\n\n        this.banOptions = [];\n\n        if (this.post || this.address) this.banOptions.push('only');\n        if (this.user) this.banOptions.push('all');\n\n        this.banOption = m.prop(this.banOptions[0]);\n        this.reason = m.prop('');\n\n        this.otherUsers = {};\n\n        this.loading = false;\n    }\n\n    className() {\n        return 'Modal--medium';\n    }\n\n    title() {\n        return app.translator.trans('fof-ban-ips.lib.modal.title');\n    }\n\n    content() {\n        const otherUsersBanned = this.otherUsers[this.banOption()];\n        const usernames =\n            otherUsersBanned && otherUsersBanned.map(u => (u && u.displayName()) || app.translator.trans('core.lib.username.deleted_text'));\n\n        return (\n            <div className=\"Modal-body\">\n                <p>{app.translator.trans('fof-ban-ips.lib.modal.ban_ip_confirmation')}</p>\n\n                <div className=\"Form-group\">\n                    {this.banOptions.map(key => (\n                        <div>\n                            <input\n                                type=\"radio\"\n                                name=\"ban-option\"\n                                id={`ban-option-${key}`}\n                                checked={this.banOption() === key}\n                                onclick={this.banOption.bind(this, key)}\n                            />\n                            &nbsp;\n                            <label htmlFor={`ban-option-${key}`}>\n                                {app.translator.trans(`fof-ban-ips.forum.modal.ban_options_${key}_ip`, {\n                                    user: this.user,\n                                    ip: this.address || (this.post && this.post.ipAddress()),\n                                })}\n                            </label>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"Form-group\">\n                    <label className=\"label\">{app.translator.trans('fof-ban-ips.lib.modal.reason_label')}</label>\n                    <input type=\"text\" className=\"FormControl\" bidi={this.reason} />\n                </div>\n\n                {otherUsersBanned\n                    ? otherUsersBanned.length\n                        ? Alert.component({\n                              children: app.translator.transChoice('fof-ban-ips.lib.modal.ban_ip_users', usernames.length, {\n                                  users: punctuateSeries(usernames),\n                              }),\n                              dismissible: false,\n                          })\n                        : Alert.component({\n                              children: app.translator.trans('fof-ban-ips.forum.modal.ban_ip_no_users'),\n                              dismissible: false,\n                              type: 'success',\n                          })\n                    : ''}\n\n                {otherUsersBanned && <br />}\n\n                <div className=\"Form-group\">\n                    <Button className=\"Button Button--primary\" type=\"submit\" loading={this.loading}>\n                        {usernames\n                            ? app.translator.trans('fof-ban-ips.lib.modal.ban_button')\n                            : app.translator.trans('fof-ban-ips.lib.modal.check_button')}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        if (typeof this.otherUsers[this.banOption()] === 'undefined') return this.getOtherUsers();\n\n        const attrs = {\n            reason: this.reason(),\n            userId: this.user.id(),\n        };\n\n        if (this.banOption() === 'only') {\n            attrs.address = this.post.ipAddress();\n\n            app.store\n                .createRecord('banned_ips')\n                .save(attrs)\n                .then(this.done.bind(this))\n                .then(this.hide.bind(this), this.onerror.bind(this), this.loaded.bind(this));\n        } else if (this.banOption() === 'all') {\n            app.request({\n                data: {\n                    data: {\n                        attributes: attrs,\n                    },\n                },\n                url: `${app.forum.attribute('apiUrl')}${this.user.apiEndpoint()}/ban`,\n                method: 'POST',\n                errorHandler: this.onerror.bind(this),\n            })\n                .then(res => app.store.pushPayload(res).forEach(this.done.bind(this)))\n                .then(this.hide.bind(this))\n                .catch(() => {})\n                .then(this.loaded.bind(this));\n        }\n    }\n\n    getOtherUsers() {\n        const data = {};\n\n        if (this.banOption() === 'only') data.ip = this.address || this.post.ipAddress();\n\n        app.request({\n            data,\n            url: `${app.forum.attribute('apiUrl')}/fof/ban-ips/check-users/${this.user.id()}`,\n            method: 'GET',\n            errorHandler: this.onerror.bind(this),\n        })\n            .then(res => {\n                this.otherUsers[this.banOption()] = res.data.map(e => app.store.pushObject(e)).filter(e => e.bannedIPs().length === 0);\n                this.loading = false;\n            })\n            .catch(() => {})\n            .then(this.loaded.bind(this));\n    }\n\n    done(bannedIP) {\n        const obj = {\n            type: 'banned_ips',\n            id: bannedIP.id(),\n        };\n\n        if (this.post) {\n            this.post.data.relationships.banned_ip = {\n                data: obj,\n            };\n        }\n\n        if (!this.user.data.relationships.banned_ips)\n            this.user.data.relationships.banned_ips = {\n                data: [],\n            };\n\n        this.user.data.relationships.banned_ips.data.push(obj);\n        this.user.data.attributes.isBanned = true;\n    }\n}\n","import Button from 'flarum/components/Button';\nimport Alert from 'flarum/components/Alert';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\n\nimport BanIPModal from './BanIPModal';\n\nexport default class UnbanIPModal extends BanIPModal {\n    title() {\n        return app.translator.trans('fof-ban-ips.lib.modal.unban_title');\n    }\n\n    content() {\n        const otherUsers = this.otherUsers[this.banOption()];\n        const usernames = otherUsers && otherUsers.map(u => (u && u.displayName()) || app.translator.trans('core.lib.username.deleted_text'));\n\n        if (this.bannedIPs) {\n            return (\n                <div className=\"Modal-body\">\n                    {Alert.component({\n                        children: app.translator.trans('fof-ban-ips.lib.modal.unbanned_ips', { ips: punctuateSeries(this.bannedIPs) }),\n                        dismissible: false,\n                        type: 'success',\n                    })}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"Modal-body\">\n                <p>{app.translator.trans('fof-ban-ips.lib.modal.unban_ip_confirmation')}</p>\n\n                <div className=\"Form-group\">\n                    {this.banOptions.map(key => (\n                        <div>\n                            <input\n                                type=\"radio\"\n                                name=\"ban-option\"\n                                id={`ban-option-${key}`}\n                                checked={this.banOption() === key}\n                                onclick={this.banOption.bind(this, key)}\n                            />\n                            &nbsp;\n                            <label htmlFor={`ban-option-${key}`}>\n                                {app.translator.trans(`fof-ban-ips.lib.modal.unban_options_${key}_ip`, {\n                                    user: this.user,\n                                    ip: this.address || (this.post && this.post.ipAddress()),\n                                })}\n                            </label>\n                        </div>\n                    ))}\n                </div>\n\n                {otherUsers\n                    ? otherUsers.length\n                        ? Alert.component({\n                              children: app.translator.transChoice('fof-ban-ips.lib.modal.unban_ip_users', usernames.length, {\n                                  users: punctuateSeries(usernames),\n                              }),\n                              dismissible: false,\n                          })\n                        : Alert.component({\n                              children: app.translator.trans('fof-ban-ips.lib.modal.unban_ip_no_users'),\n                              dismissible: false,\n                              type: 'success',\n                          })\n                    : ''}\n\n                {otherUsers && <br />}\n\n                <div className=\"Form-group\">\n                    <Button className=\"Button Button--primary\" type=\"submit\" loading={this.loading}>\n                        {usernames\n                            ? app.translator.trans('fof-ban-ips.lib.modal.unban_button')\n                            : app.translator.trans('fof-ban-ips.lib.modal.check_button')}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        if (typeof this.otherUsers[this.banOption()] === 'undefined') return this.getOtherUsers();\n\n        const attrs = {};\n\n        if (this.banOption() === 'only') {\n            attrs.address = this.address || this.post.ipAddress();\n\n            const bannedIP = this.post ? this.post.bannedIP() : app.store.getBy('banned_ips', 'address', this.address);\n\n            bannedIP\n                .delete()\n                .then(this.done.bind(this, bannedIP))\n                .catch(this.onerror.bind(this));\n        } else if (this.banOption() === 'all') {\n            app.request({\n                data: {\n                    data: {\n                        attributes: attrs,\n                    },\n                },\n                url: `${app.forum.attribute('apiUrl')}${this.user.apiEndpoint()}/unban`,\n                method: 'POST',\n                errorHandler: this.onerror.bind(this),\n            })\n                .then(this.done.bind(this))\n                .catch(this.onerror.bind(this));\n        }\n    }\n\n    getOtherUsers() {\n        const data = {};\n\n        if (this.banOption() === 'only') data.ip = this.address || this.post.ipAddress();\n\n        let url = `${app.forum.attribute('apiUrl')}/fof/ban-ips/check-users`;\n\n        if (this.user) url += `/${this.user.id()}`;\n\n        app.request({\n            data,\n            url: url,\n            method: 'GET',\n            errorHandler: this.onerror.bind(this),\n        })\n            .then(res => {\n                const data = app.store.pushPayload(res);\n\n                this.otherUsers[this.banOption()] = data.filter(e => e.bannedIPs().length === 1);\n                this.loading = false;\n\n                m.lazyRedraw();\n            })\n            .catch(() => {})\n            .then(this.loaded.bind(this));\n    }\n\n    done(bannedIP) {\n        this.loading = false;\n\n        if (this.post) delete this.post.data.relationships.banned_ip;\n\n        if (this.user && !this.user.data.relationships) {\n            if (bannedIP instanceof app.store.models.banned_ips) {\n                this.user.data.relationships.banned_ips = {\n                    data: this.user.data.relationships.banned_ips.data.filter(e => e.id !== bannedIP.id()),\n                };\n                this.user.data.attributes.isBanned = this.user.data.relationships.banned_ips.data.length !== 0;\n            } else if (!bannedIP) {\n                this.user.data.relationships.banned_ips.data = [];\n                this.user.data.attributes.isBanned = false;\n            }\n        }\n\n        if (bannedIP && Array.isArray(bannedIP.data)) {\n            this.bannedIPs = bannedIP.data.map(b => b.attributes.address);\n            this.loading = false;\n\n            m.lazyRedraw();\n        }\n    }\n\n    hide() {\n        super.hide();\n\n        location.reload();\n    }\n}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class BannedIP extends mixin(Model, {\n    creator: Model.hasOne('creator'),\n    user: Model.hasOne('user'),\n    address: Model.attribute('address'),\n    reason: Model.attribute('reason'),\n    createdAt: Model.attribute('createdAt', Model.transformDate),\n    deletedAt: Model.attribute('deletedAt', Model.transformDate),\n}) {\n    apiEndpoint() {\n        return `/fof/ban-ips${this.exists ? `/${this.id()}` : ''}`;\n    }\n}\n","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/Badge'];","import Model from 'flarum/Model';\n\nimport addBanIPControl from './addBanIPControl';\nimport BannedIP from '../common/models/BannedIP';\nimport addBannedBadge from './addBannedBadge';\n\napp.initializers.add('fof/ban-ips', () => {\n    app.store.models.posts.prototype.canBanIP = Model.attribute('canBanIP');\n    app.store.models.posts.prototype.ipAddress = Model.attribute('ipAddress');\n    app.store.models.posts.prototype.bannedIP = Model.hasOne('banned_ip');\n\n    app.store.models.users.prototype.canBanIP = Model.attribute('canBanIP');\n    app.store.models.users.prototype.isBanned = Model.attribute('isBanned');\n    app.store.models.users.prototype.bannedIPs = Model.hasMany('banned_ips');\n\n    app.store.models.banned_ips = BannedIP;\n\n    addBanIPControl();\n    addBannedBadge();\n});\n","import { extend } from 'flarum/extend';\nimport PostControls from 'flarum/utils/PostControls';\nimport UserControls from 'flarum/utils/UserControls';\nimport Button from 'flarum/components/Button';\n\nimport BanIPModal from '../common/components/BanIPModal';\nimport UnbanIPModal from '../common/components/UnbanIPModal';\n\nexport default () => {\n    extend(PostControls, 'userControls', function(items, post) {\n        const isBanned = post.user().isBanned();\n        const prefix = isBanned ? 'un' : '';\n\n        // Removes ability to ban thyself and also does permission check.\n        if (!post.canBanIP() || post.isHidden() || post.user() === app.session.user || post.contentType() !== 'comment') return;\n\n        items.add(\n            `${prefix}ban`,\n            Button.component({\n                children: app.translator.trans(`fof-ban-ips.forum.${prefix}ban_ip_button`),\n                className: 'Button Button--link',\n                icon: 'fas fa-gavel',\n                onclick: () => app.modal.show(isBanned ? new UnbanIPModal({ post }) : new BanIPModal({ post })),\n            })\n        );\n    });\n\n    extend(UserControls, 'moderationControls', function(items, user) {\n        if (user.canBanIP() || user === app.session.user) return;\n\n        const isBanned = user.isBanned();\n        const prefix = isBanned ? 'un' : '';\n\n        items.add(\n            `${prefix}ban`,\n            Button.component({\n                children: app.translator.trans(`fof-ban-ips.forum.user_controls.${prefix}ban_button`),\n                icon: 'fas fa-gavel',\n                onclick: () => app.modal.show(isBanned ? new UnbanIPModal({ user }) : new BanIPModal({ user })),\n            })\n        );\n    });\n};\n","import { extend } from 'flarum/extend';\nimport User from 'flarum/models/User';\nimport Badge from 'flarum/components/Badge';\n\nexport default () => {\n    extend(User.prototype, 'badges', function(items) {\n        if (this.isBanned()) {\n            items.add(\n                'banned',\n                Badge.component({\n                    icon: 'fas fa-gavel',\n                    type: 'banned',\n                    label: app.translator.trans('fof-ban-ips.forum.user_badge.banned_tooltip'),\n                })\n            );\n        }\n    });\n};\n"],"sourceRoot":""}